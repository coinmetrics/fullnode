---
stages:
  - update lock file
  - build
  - publish

update lock file:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: update lock file
  script:
    - nix flake update
    - if git diff --exit-code; then echo "No changes."; exit 0; fi
    - git add flake.lock
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git commit -m 'Update flake.lock'
    - git remote set-url origin --push ${CI_SERVER_PROTOCOL}://${FULLNODE_GIT_USERNAME}:${FULLNODE_GIT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git push origin HEAD:${CI_COMMIT_REF_NAME}
  tags:
    - kube-hel1-nix

.generic-build:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule")
      changes:
        paths:
          - fullnodes/$FULLNODE/**/*
          - .gitlab-ci.yml
          - flake.lock
  stage: build
  script:
    - nix --print-build-logs run .#publish-$FULLNODE -- dry-run
  artifacts:
    expire_in: "1 week"
    when: always
  tags:
    - kube-hel1-nix

.generic-publish:
  variables:
    PRIVATE: "false"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"
      changes:
        paths:
          - fullnodes/$FULLNODE/**/*
          - .gitlab-ci.yml
          - flake.lock
  stage: publish
  script:
    - nix --print-build-logs run .#login
    - nix --print-build-logs run .#publish-$FULLNODE
  tags:
    - kube-hel1-nix

build algorand:
  extends: .generic-build
  variables:
    FULLNODE: algorand

publish algorand:
  extends: .generic-publish
  variables:
    FULLNODE: algorand

build algorand-indexer:
  extends: .generic-build
  variables:
    FULLNODE: algorand-indexer

publish algorand-indexer:
  extends: .generic-publish
  variables:
    FULLNODE: algorand-indexer

build bitcoin:
  extends: .generic-build
  variables:
    FULLNODE: bitcoin

publish bitcoin:
  extends: .generic-publish
  variables:
    FULLNODE: bitcoin

build bitcoin-cash:
  extends: .generic-build
  variables:
    FULLNODE: bitcoin-cash

publish bitcoin-cash:
  extends: .generic-publish
  variables:
    FULLNODE: bitcoin-cash

build bitcoin-gold:
  extends: .generic-build
  variables:
    FULLNODE: bitcoin-gold

publish bitcoin-gold:
  extends: .generic-publish
  variables:
    FULLNODE: bitcoin-gold

build bitcoin-sv:
  extends: .generic-build
  variables:
    FULLNODE: bitcoin-sv

publish bitcoin-sv:
  extends: .generic-publish
  variables:
    FULLNODE: bitcoin-sv

build bitcoin-zmce:
  extends: .generic-build
  variables:
    FULLNODE: bitcoin-zmce

publish bitcoin-zmce:
  extends: .generic-publish
  variables:
    FULLNODE: bitcoin-zmce
    PRIVATE: "true"

build bsc:
  extends: .generic-build
  variables:
    FULLNODE: bsc

publish bsc:
  extends: .generic-publish
  variables:
    FULLNODE: bsc

build coregeth:
  extends: .generic-build
  variables:
    FULLNODE: coregeth

publish coregeth:
  extends: .generic-publish
  variables:
    FULLNODE: coregeth

build cosmos-gaia:
  extends: .generic-build
  variables:
    FULLNODE: cosmos-gaia

publish cosmos-gaia:
  extends: .generic-publish
  variables:
    FULLNODE: cosmos-gaia

build cosmos-rosetta:
  extends: .generic-build
  variables:
    FULLNODE: cosmos-rosetta

publish cosmos-rosetta:
  extends: .generic-publish
  variables:
    FULLNODE: cosmos-rosetta

build decred:
  extends: .generic-build
  variables:
    FULLNODE: decred

publish decred:
  extends: .generic-publish
  variables:
    FULLNODE: decred

build digibyte:
  extends: .generic-build
  variables:
    FULLNODE: digibyte

publish digibyte:
  extends: .generic-publish
  variables:
    FULLNODE: digibyte

build dogecoin:
  extends: .generic-build
  variables:
    FULLNODE: dogecoin

publish dogecoin:
  extends: .generic-publish
  variables:
    FULLNODE: dogecoin

build elements:
  extends: .generic-build
  variables:
    FULLNODE: elements

publish elements:
  extends: .generic-publish
  variables:
    FULLNODE: elements

build erigon:
  extends: .generic-build
  variables:
    FULLNODE: erigon

publish erigon:
  extends: .generic-publish
  variables:
    FULLNODE: erigon

build geth:
  extends: .generic-build
  variables:
    FULLNODE: geth

publish geth:
  extends: .generic-publish
  variables:
    FULLNODE: geth

build go-opera:
  extends: .generic-build
  variables:
    FULLNODE: go-opera

publish go-opera:
  extends: .generic-publish
  variables:
    FULLNODE: go-opera

build grin:
  extends: .generic-build
  variables:
    FULLNODE: grin

publish grin:
  extends: .generic-publish
  variables:
    FULLNODE: grin

build lighthouse:
  extends: .generic-build
  variables:
    FULLNODE: lighthouse

publish lighthouse:
  extends: .generic-publish
  variables:
    FULLNODE: lighthouse
    PRIVATE: "true"

build litecoin:
  extends: .generic-build
  variables:
    FULLNODE: litecoin

publish litecoin:
  extends: .generic-publish
  variables:
    FULLNODE: litecoin

build monero:
  extends: .generic-build
  variables:
    FULLNODE: monero

publish monero:
  extends: .generic-publish
  variables:
    FULLNODE: monero

build omnicore:
  extends: .generic-build
  variables:
    FULLNODE: omnicore

publish omnicore:
  extends: .generic-publish
  variables:
    FULLNODE: omnicore

build openethereum:
  extends: .generic-build
  variables:
    FULLNODE: openethereum

publish openethereum:
  extends: .generic-publish
  variables:
    FULLNODE: openethereum

build pivx:
  extends: .generic-build
  variables:
    FULLNODE: pivx

publish pivx:
  extends: .generic-publish
  variables:
    FULLNODE: pivx

build polkadot:
  extends: .generic-build
  variables:
    FULLNODE: polkadot

publish polkadot:
  extends: .generic-publish
  variables:
    FULLNODE: polkadot

build vertcoin:
  extends: .generic-build
  variables:
    FULLNODE: vertcoin

publish vertcoin:
  extends: .generic-publish
  variables:
    FULLNODE: vertcoin

build zcash:
  extends: .generic-build
  variables:
    FULLNODE: zcash

publish zcash:
  extends: .generic-publish
  variables:
    FULLNODE: zcash
